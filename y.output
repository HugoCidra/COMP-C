Nonterminals useless in grammar

    ExprRECUR


Terminals unused in grammar

    LBRACE
    RBRACE
    SEMI
    INT
    CHAR
    VOID
    RESERVED
    SHORT
    DOUBLE
    IF
    ELSE
    WHILE
    RETURN
    LOWER
    HIGHER


Grammar

    0 $accept: Program $end

    1 Program: Expr

    2 Expr: Expr ASSIGN Expr
    3     | Expr COMMA Expr
    4     | Expr PLUS Expr
    5     | Expr MINUS Expr
    6     | Expr MUL Expr
    7     | Expr DIV Expr
    8     | Expr MOD Expr
    9     | Expr OR Expr
   10     | Expr AND Expr
   11     | Expr BITWISEAND Expr
   12     | Expr BITWISEOR Expr
   13     | Expr BITWISEXOR Expr
   14     | Expr EQ Expr
   15     | Expr NE Expr
   16     | Expr LE Expr
   17     | Expr GE Expr
   18     | Expr LT Expr
   19     | Expr GT Expr
   20     | PLUS Expr
   21     | MINUS Expr
   22     | NOT Expr
   23     | IDENTIFIER LPAR RPAR
   24     | IDENTIFIER LPAR Expr RPAR
   25     | IDENTIFIER
   26     | NATURAL
   27     | CHRLIT
   28     | DECIMAL
   29     | LPAR Expr RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BITWISEAND (258) 11
    BITWISEOR (259) 12
    BITWISEXOR (260) 13
    AND (261) 10
    ASSIGN (262) 2
    MUL (263) 6
    DIV (264) 7
    EQ (265) 14
    GE (266) 17
    GT (267) 19
    LBRACE (268)
    LE (269) 16
    LPAR (270) 23 24 29
    LT (271) 18
    MINUS (272) 5 21
    MOD (273) 8
    NE (274) 15
    NOT (275) 22
    OR (276) 9
    PLUS (277) 4 20
    RBRACE (278)
    RPAR (279) 23 24 29
    SEMI (280)
    NATURAL <info> (281) 26
    DECIMAL <info> (282) 28
    IDENTIFIER <info> (283) 23 24 25
    CHRLIT <info> (284) 27
    INT (285)
    CHAR (286)
    VOID (287)
    RESERVED (288)
    SHORT (289)
    DOUBLE (290)
    IF (291)
    ELSE (292)
    WHILE (293)
    RETURN (294)
    COMMA (295) 3
    LOWER (296)
    HIGHER (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    Program <node> (44)
        on left: 1
        on right: 0
    Expr <node> (45)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 24 29


State 0

    0 $accept: • Program $end
    1 Program: • Expr
    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Program  go to state 9
    Expr     go to state 10


State 1

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR
   29     | LPAR • Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 11


State 2

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   21     | MINUS • Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 12


State 3

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   22     | NOT • Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 13


State 4

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   20     | PLUS • Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 14


State 5

   26 Expr: NATURAL •

    $default  reduce using rule 26 (Expr)


State 6

   28 Expr: DECIMAL •

    $default  reduce using rule 28 (Expr)


State 7

   23 Expr: IDENTIFIER • LPAR RPAR
   24     | IDENTIFIER • LPAR Expr RPAR
   25     | IDENTIFIER •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, COMMA]

    LPAR  shift, and go to state 15

    $default  reduce using rule 25 (Expr)


State 8

   27 Expr: CHRLIT •

    $default  reduce using rule 27 (Expr)


State 9

    0 $accept: Program • $end

    $end  shift, and go to state 16


State 10

    1 Program: Expr •  [$end]
    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    BITWISEAND  shift, and go to state 17
    BITWISEOR   shift, and go to state 18
    BITWISEXOR  shift, and go to state 19
    AND         shift, and go to state 20
    ASSIGN      shift, and go to state 21
    MUL         shift, and go to state 22
    DIV         shift, and go to state 23
    EQ          shift, and go to state 24
    GE          shift, and go to state 25
    GT          shift, and go to state 26
    LE          shift, and go to state 27
    LT          shift, and go to state 28
    MINUS       shift, and go to state 29
    MOD         shift, and go to state 30
    NE          shift, and go to state 31
    OR          shift, and go to state 32
    PLUS        shift, and go to state 33
    COMMA       shift, and go to state 34

    $default  reduce using rule 1 (Program)


State 11

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr
   29     | LPAR Expr • RPAR

    BITWISEAND  shift, and go to state 17
    BITWISEOR   shift, and go to state 18
    BITWISEXOR  shift, and go to state 19
    AND         shift, and go to state 20
    ASSIGN      shift, and go to state 21
    MUL         shift, and go to state 22
    DIV         shift, and go to state 23
    EQ          shift, and go to state 24
    GE          shift, and go to state 25
    GT          shift, and go to state 26
    LE          shift, and go to state 27
    LT          shift, and go to state 28
    MINUS       shift, and go to state 29
    MOD         shift, and go to state 30
    NE          shift, and go to state 31
    OR          shift, and go to state 32
    PLUS        shift, and go to state 33
    RPAR        shift, and go to state 35
    COMMA       shift, and go to state 34


State 12

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr
   21     | MINUS Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, COMMA]

    MUL  shift, and go to state 22
    DIV  shift, and go to state 23
    MOD  shift, and go to state 30

    $default  reduce using rule 21 (Expr)

    Conflict between rule 21 and token BITWISEAND resolved as reduce (BITWISEAND < MINUS).
    Conflict between rule 21 and token BITWISEOR resolved as reduce (BITWISEOR < MINUS).
    Conflict between rule 21 and token BITWISEXOR resolved as reduce (BITWISEXOR < MINUS).
    Conflict between rule 21 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 21 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 21 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 21 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 21 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 21 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 21 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 21 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 21 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 21 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 21 and token MOD resolved as shift (MINUS < MOD).
    Conflict between rule 21 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 21 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 21 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 21 and token COMMA resolved as reduce (COMMA < MINUS).


State 13

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr
   22     | NOT Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, COMMA]

    $default  reduce using rule 22 (Expr)

    Conflict between rule 22 and token BITWISEAND resolved as reduce (BITWISEAND < NOT).
    Conflict between rule 22 and token BITWISEOR resolved as reduce (BITWISEOR < NOT).
    Conflict between rule 22 and token BITWISEXOR resolved as reduce (BITWISEXOR < NOT).
    Conflict between rule 22 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 22 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 22 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 22 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 22 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 22 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 22 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 22 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 22 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 22 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 22 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 22 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 22 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 22 and token PLUS resolved as reduce (PLUS < NOT).
    Conflict between rule 22 and token COMMA resolved as reduce (COMMA < NOT).


State 14

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr
   20     | PLUS Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, COMMA]

    MUL  shift, and go to state 22
    DIV  shift, and go to state 23
    MOD  shift, and go to state 30

    $default  reduce using rule 20 (Expr)

    Conflict between rule 20 and token BITWISEAND resolved as reduce (BITWISEAND < PLUS).
    Conflict between rule 20 and token BITWISEOR resolved as reduce (BITWISEOR < PLUS).
    Conflict between rule 20 and token BITWISEXOR resolved as reduce (BITWISEXOR < PLUS).
    Conflict between rule 20 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 20 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 20 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 20 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 20 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 20 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 20 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 20 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 20 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 20 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 20 and token MOD resolved as shift (PLUS < MOD).
    Conflict between rule 20 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 20 and token OR resolved as reduce (OR < PLUS).
    Conflict between rule 20 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 20 and token COMMA resolved as reduce (COMMA < PLUS).


State 15

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   23     | IDENTIFIER LPAR • RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   24     | IDENTIFIER LPAR • Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    RPAR        shift, and go to state 36
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 37


State 16

    0 $accept: Program $end •

    $default  accept


State 17

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   11     | Expr BITWISEAND • Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 38


State 18

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   12     | Expr BITWISEOR • Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 39


State 19

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   13     | Expr BITWISEXOR • Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 40


State 20

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   10     | Expr AND • Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 41


State 21

    2 Expr: • Expr ASSIGN Expr
    2     | Expr ASSIGN • Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 42


State 22

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    6     | Expr MUL • Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 43


State 23

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    7     | Expr DIV • Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 44


State 24

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   14     | Expr EQ • Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 45


State 25

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   17     | Expr GE • Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 46


State 26

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   19     | Expr GT • Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 47


State 27

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   16     | Expr LE • Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 48


State 28

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   18     | Expr LT • Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 49


State 29

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    5     | Expr MINUS • Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 50


State 30

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    8     | Expr MOD • Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 51


State 31

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   15     | Expr NE • Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 52


State 32

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
    9     | Expr OR • Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 53


State 33

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    4     | • Expr PLUS Expr
    4     | Expr PLUS • Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 54


State 34

    2 Expr: • Expr ASSIGN Expr
    3     | • Expr COMMA Expr
    3     | Expr COMMA • Expr
    4     | • Expr PLUS Expr
    5     | • Expr MINUS Expr
    6     | • Expr MUL Expr
    7     | • Expr DIV Expr
    8     | • Expr MOD Expr
    9     | • Expr OR Expr
   10     | • Expr AND Expr
   11     | • Expr BITWISEAND Expr
   12     | • Expr BITWISEOR Expr
   13     | • Expr BITWISEXOR Expr
   14     | • Expr EQ Expr
   15     | • Expr NE Expr
   16     | • Expr LE Expr
   17     | • Expr GE Expr
   18     | • Expr LT Expr
   19     | • Expr GT Expr
   20     | • PLUS Expr
   21     | • MINUS Expr
   22     | • NOT Expr
   23     | • IDENTIFIER LPAR RPAR
   24     | • IDENTIFIER LPAR Expr RPAR
   25     | • IDENTIFIER
   26     | • NATURAL
   27     | • CHRLIT
   28     | • DECIMAL
   29     | • LPAR Expr RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    NATURAL     shift, and go to state 5
    DECIMAL     shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    CHRLIT      shift, and go to state 8

    Expr  go to state 55


State 35

   29 Expr: LPAR Expr RPAR •

    $default  reduce using rule 29 (Expr)


State 36

   23 Expr: IDENTIFIER LPAR RPAR •

    $default  reduce using rule 23 (Expr)


State 37

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr
   24     | IDENTIFIER LPAR Expr • RPAR

    BITWISEAND  shift, and go to state 17
    BITWISEOR   shift, and go to state 18
    BITWISEXOR  shift, and go to state 19
    AND         shift, and go to state 20
    ASSIGN      shift, and go to state 21
    MUL         shift, and go to state 22
    DIV         shift, and go to state 23
    EQ          shift, and go to state 24
    GE          shift, and go to state 25
    GT          shift, and go to state 26
    LE          shift, and go to state 27
    LT          shift, and go to state 28
    MINUS       shift, and go to state 29
    MOD         shift, and go to state 30
    NE          shift, and go to state 31
    OR          shift, and go to state 32
    PLUS        shift, and go to state 33
    RPAR        shift, and go to state 56
    COMMA       shift, and go to state 34


State 38

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   11     | Expr BITWISEAND Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, OR, RPAR, COMMA]
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    EQ     shift, and go to state 24
    GE     shift, and go to state 25
    GT     shift, and go to state 26
    LE     shift, and go to state 27
    LT     shift, and go to state 28
    MINUS  shift, and go to state 29
    MOD    shift, and go to state 30
    NE     shift, and go to state 31
    PLUS   shift, and go to state 33

    $default  reduce using rule 11 (Expr)

    Conflict between rule 11 and token BITWISEAND resolved as reduce (%left BITWISEAND).
    Conflict between rule 11 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEAND).
    Conflict between rule 11 and token BITWISEXOR resolved as reduce (BITWISEXOR < BITWISEAND).
    Conflict between rule 11 and token AND resolved as reduce (AND < BITWISEAND).
    Conflict between rule 11 and token ASSIGN resolved as reduce (ASSIGN < BITWISEAND).
    Conflict between rule 11 and token MUL resolved as shift (BITWISEAND < MUL).
    Conflict between rule 11 and token DIV resolved as shift (BITWISEAND < DIV).
    Conflict between rule 11 and token EQ resolved as shift (BITWISEAND < EQ).
    Conflict between rule 11 and token GE resolved as shift (BITWISEAND < GE).
    Conflict between rule 11 and token GT resolved as shift (BITWISEAND < GT).
    Conflict between rule 11 and token LE resolved as shift (BITWISEAND < LE).
    Conflict between rule 11 and token LT resolved as shift (BITWISEAND < LT).
    Conflict between rule 11 and token MINUS resolved as shift (BITWISEAND < MINUS).
    Conflict between rule 11 and token MOD resolved as shift (BITWISEAND < MOD).
    Conflict between rule 11 and token NE resolved as shift (BITWISEAND < NE).
    Conflict between rule 11 and token OR resolved as reduce (OR < BITWISEAND).
    Conflict between rule 11 and token PLUS resolved as shift (BITWISEAND < PLUS).
    Conflict between rule 11 and token COMMA resolved as reduce (COMMA < BITWISEAND).


State 39

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   12     | Expr BITWISEOR Expr •  [$end, BITWISEOR, AND, ASSIGN, OR, RPAR, COMMA]
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    BITWISEAND  shift, and go to state 17
    BITWISEXOR  shift, and go to state 19
    MUL         shift, and go to state 22
    DIV         shift, and go to state 23
    EQ          shift, and go to state 24
    GE          shift, and go to state 25
    GT          shift, and go to state 26
    LE          shift, and go to state 27
    LT          shift, and go to state 28
    MINUS       shift, and go to state 29
    MOD         shift, and go to state 30
    NE          shift, and go to state 31
    PLUS        shift, and go to state 33

    $default  reduce using rule 12 (Expr)

    Conflict between rule 12 and token BITWISEAND resolved as shift (BITWISEOR < BITWISEAND).
    Conflict between rule 12 and token BITWISEOR resolved as reduce (%left BITWISEOR).
    Conflict between rule 12 and token BITWISEXOR resolved as shift (BITWISEOR < BITWISEXOR).
    Conflict between rule 12 and token AND resolved as reduce (AND < BITWISEOR).
    Conflict between rule 12 and token ASSIGN resolved as reduce (ASSIGN < BITWISEOR).
    Conflict between rule 12 and token MUL resolved as shift (BITWISEOR < MUL).
    Conflict between rule 12 and token DIV resolved as shift (BITWISEOR < DIV).
    Conflict between rule 12 and token EQ resolved as shift (BITWISEOR < EQ).
    Conflict between rule 12 and token GE resolved as shift (BITWISEOR < GE).
    Conflict between rule 12 and token GT resolved as shift (BITWISEOR < GT).
    Conflict between rule 12 and token LE resolved as shift (BITWISEOR < LE).
    Conflict between rule 12 and token LT resolved as shift (BITWISEOR < LT).
    Conflict between rule 12 and token MINUS resolved as shift (BITWISEOR < MINUS).
    Conflict between rule 12 and token MOD resolved as shift (BITWISEOR < MOD).
    Conflict between rule 12 and token NE resolved as shift (BITWISEOR < NE).
    Conflict between rule 12 and token OR resolved as reduce (OR < BITWISEOR).
    Conflict between rule 12 and token PLUS resolved as shift (BITWISEOR < PLUS).
    Conflict between rule 12 and token COMMA resolved as reduce (COMMA < BITWISEOR).


State 40

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   13     | Expr BITWISEXOR Expr •  [$end, BITWISEOR, BITWISEXOR, AND, ASSIGN, OR, RPAR, COMMA]
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    BITWISEAND  shift, and go to state 17
    MUL         shift, and go to state 22
    DIV         shift, and go to state 23
    EQ          shift, and go to state 24
    GE          shift, and go to state 25
    GT          shift, and go to state 26
    LE          shift, and go to state 27
    LT          shift, and go to state 28
    MINUS       shift, and go to state 29
    MOD         shift, and go to state 30
    NE          shift, and go to state 31
    PLUS        shift, and go to state 33

    $default  reduce using rule 13 (Expr)

    Conflict between rule 13 and token BITWISEAND resolved as shift (BITWISEXOR < BITWISEAND).
    Conflict between rule 13 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEXOR).
    Conflict between rule 13 and token BITWISEXOR resolved as reduce (%left BITWISEXOR).
    Conflict between rule 13 and token AND resolved as reduce (AND < BITWISEXOR).
    Conflict between rule 13 and token ASSIGN resolved as reduce (ASSIGN < BITWISEXOR).
    Conflict between rule 13 and token MUL resolved as shift (BITWISEXOR < MUL).
    Conflict between rule 13 and token DIV resolved as shift (BITWISEXOR < DIV).
    Conflict between rule 13 and token EQ resolved as shift (BITWISEXOR < EQ).
    Conflict between rule 13 and token GE resolved as shift (BITWISEXOR < GE).
    Conflict between rule 13 and token GT resolved as shift (BITWISEXOR < GT).
    Conflict between rule 13 and token LE resolved as shift (BITWISEXOR < LE).
    Conflict between rule 13 and token LT resolved as shift (BITWISEXOR < LT).
    Conflict between rule 13 and token MINUS resolved as shift (BITWISEXOR < MINUS).
    Conflict between rule 13 and token MOD resolved as shift (BITWISEXOR < MOD).
    Conflict between rule 13 and token NE resolved as shift (BITWISEXOR < NE).
    Conflict between rule 13 and token OR resolved as reduce (OR < BITWISEXOR).
    Conflict between rule 13 and token PLUS resolved as shift (BITWISEXOR < PLUS).
    Conflict between rule 13 and token COMMA resolved as reduce (COMMA < BITWISEXOR).


State 41

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   10     | Expr AND Expr •  [$end, AND, ASSIGN, OR, RPAR, COMMA]
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    BITWISEAND  shift, and go to state 17
    BITWISEOR   shift, and go to state 18
    BITWISEXOR  shift, and go to state 19
    MUL         shift, and go to state 22
    DIV         shift, and go to state 23
    EQ          shift, and go to state 24
    GE          shift, and go to state 25
    GT          shift, and go to state 26
    LE          shift, and go to state 27
    LT          shift, and go to state 28
    MINUS       shift, and go to state 29
    MOD         shift, and go to state 30
    NE          shift, and go to state 31
    PLUS        shift, and go to state 33

    $default  reduce using rule 10 (Expr)

    Conflict between rule 10 and token BITWISEAND resolved as shift (AND < BITWISEAND).
    Conflict between rule 10 and token BITWISEOR resolved as shift (AND < BITWISEOR).
    Conflict between rule 10 and token BITWISEXOR resolved as shift (AND < BITWISEXOR).
    Conflict between rule 10 and token AND resolved as reduce (%left AND).
    Conflict between rule 10 and token ASSIGN resolved as reduce (ASSIGN < AND).
    Conflict between rule 10 and token MUL resolved as shift (AND < MUL).
    Conflict between rule 10 and token DIV resolved as shift (AND < DIV).
    Conflict between rule 10 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 10 and token GE resolved as shift (AND < GE).
    Conflict between rule 10 and token GT resolved as shift (AND < GT).
    Conflict between rule 10 and token LE resolved as shift (AND < LE).
    Conflict between rule 10 and token LT resolved as shift (AND < LT).
    Conflict between rule 10 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 10 and token MOD resolved as shift (AND < MOD).
    Conflict between rule 10 and token NE resolved as shift (AND < NE).
    Conflict between rule 10 and token OR resolved as reduce (OR < AND).
    Conflict between rule 10 and token PLUS resolved as shift (AND < PLUS).
    Conflict between rule 10 and token COMMA resolved as reduce (COMMA < AND).


State 42

    2 Expr: Expr • ASSIGN Expr
    2     | Expr ASSIGN Expr •  [$end, RPAR, COMMA]
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    BITWISEAND  shift, and go to state 17
    BITWISEOR   shift, and go to state 18
    BITWISEXOR  shift, and go to state 19
    AND         shift, and go to state 20
    ASSIGN      shift, and go to state 21
    MUL         shift, and go to state 22
    DIV         shift, and go to state 23
    EQ          shift, and go to state 24
    GE          shift, and go to state 25
    GT          shift, and go to state 26
    LE          shift, and go to state 27
    LT          shift, and go to state 28
    MINUS       shift, and go to state 29
    MOD         shift, and go to state 30
    NE          shift, and go to state 31
    OR          shift, and go to state 32
    PLUS        shift, and go to state 33

    $default  reduce using rule 2 (Expr)

    Conflict between rule 2 and token BITWISEAND resolved as shift (ASSIGN < BITWISEAND).
    Conflict between rule 2 and token BITWISEOR resolved as shift (ASSIGN < BITWISEOR).
    Conflict between rule 2 and token BITWISEXOR resolved as shift (ASSIGN < BITWISEXOR).
    Conflict between rule 2 and token AND resolved as shift (ASSIGN < AND).
    Conflict between rule 2 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 2 and token MUL resolved as shift (ASSIGN < MUL).
    Conflict between rule 2 and token DIV resolved as shift (ASSIGN < DIV).
    Conflict between rule 2 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 2 and token GE resolved as shift (ASSIGN < GE).
    Conflict between rule 2 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 2 and token LE resolved as shift (ASSIGN < LE).
    Conflict between rule 2 and token LT resolved as shift (ASSIGN < LT).
    Conflict between rule 2 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 2 and token MOD resolved as shift (ASSIGN < MOD).
    Conflict between rule 2 and token NE resolved as shift (ASSIGN < NE).
    Conflict between rule 2 and token OR resolved as shift (ASSIGN < OR).
    Conflict between rule 2 and token PLUS resolved as shift (ASSIGN < PLUS).
    Conflict between rule 2 and token COMMA resolved as reduce (COMMA < ASSIGN).


State 43

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    6     | Expr MUL Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, COMMA]
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    $default  reduce using rule 6 (Expr)

    Conflict between rule 6 and token BITWISEAND resolved as reduce (BITWISEAND < MUL).
    Conflict between rule 6 and token BITWISEOR resolved as reduce (BITWISEOR < MUL).
    Conflict between rule 6 and token BITWISEXOR resolved as reduce (BITWISEXOR < MUL).
    Conflict between rule 6 and token AND resolved as reduce (AND < MUL).
    Conflict between rule 6 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 6 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 6 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 6 and token EQ resolved as reduce (EQ < MUL).
    Conflict between rule 6 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 6 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 6 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 6 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 6 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 6 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 6 and token NE resolved as reduce (NE < MUL).
    Conflict between rule 6 and token OR resolved as reduce (OR < MUL).
    Conflict between rule 6 and token PLUS resolved as reduce (PLUS < MUL).
    Conflict between rule 6 and token COMMA resolved as reduce (COMMA < MUL).


State 44

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    7     | Expr DIV Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, COMMA]
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    $default  reduce using rule 7 (Expr)

    Conflict between rule 7 and token BITWISEAND resolved as reduce (BITWISEAND < DIV).
    Conflict between rule 7 and token BITWISEOR resolved as reduce (BITWISEOR < DIV).
    Conflict between rule 7 and token BITWISEXOR resolved as reduce (BITWISEXOR < DIV).
    Conflict between rule 7 and token AND resolved as reduce (AND < DIV).
    Conflict between rule 7 and token ASSIGN resolved as reduce (ASSIGN < DIV).
    Conflict between rule 7 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 7 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 7 and token EQ resolved as reduce (EQ < DIV).
    Conflict between rule 7 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 7 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 7 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 7 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 7 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 7 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 7 and token NE resolved as reduce (NE < DIV).
    Conflict between rule 7 and token OR resolved as reduce (OR < DIV).
    Conflict between rule 7 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 7 and token COMMA resolved as reduce (COMMA < DIV).


State 45

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   14     | Expr EQ Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, NE, OR, RPAR, COMMA]
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    GE     shift, and go to state 25
    GT     shift, and go to state 26
    LE     shift, and go to state 27
    LT     shift, and go to state 28
    MINUS  shift, and go to state 29
    MOD    shift, and go to state 30
    PLUS   shift, and go to state 33

    $default  reduce using rule 14 (Expr)

    Conflict between rule 14 and token BITWISEAND resolved as reduce (BITWISEAND < EQ).
    Conflict between rule 14 and token BITWISEOR resolved as reduce (BITWISEOR < EQ).
    Conflict between rule 14 and token BITWISEXOR resolved as reduce (BITWISEXOR < EQ).
    Conflict between rule 14 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 14 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 14 and token MUL resolved as shift (EQ < MUL).
    Conflict between rule 14 and token DIV resolved as shift (EQ < DIV).
    Conflict between rule 14 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 14 and token GE resolved as shift (EQ < GE).
    Conflict between rule 14 and token GT resolved as shift (EQ < GT).
    Conflict between rule 14 and token LE resolved as shift (EQ < LE).
    Conflict between rule 14 and token LT resolved as shift (EQ < LT).
    Conflict between rule 14 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 14 and token MOD resolved as shift (EQ < MOD).
    Conflict between rule 14 and token NE resolved as reduce (%left NE).
    Conflict between rule 14 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 14 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 14 and token COMMA resolved as reduce (COMMA < EQ).


State 46

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   17     | Expr GE Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, NE, OR, RPAR, COMMA]
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    MINUS  shift, and go to state 29
    MOD    shift, and go to state 30
    PLUS   shift, and go to state 33

    $default  reduce using rule 17 (Expr)

    Conflict between rule 17 and token BITWISEAND resolved as reduce (BITWISEAND < GE).
    Conflict between rule 17 and token BITWISEOR resolved as reduce (BITWISEOR < GE).
    Conflict between rule 17 and token BITWISEXOR resolved as reduce (BITWISEXOR < GE).
    Conflict between rule 17 and token AND resolved as reduce (AND < GE).
    Conflict between rule 17 and token ASSIGN resolved as reduce (ASSIGN < GE).
    Conflict between rule 17 and token MUL resolved as shift (GE < MUL).
    Conflict between rule 17 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 17 and token EQ resolved as reduce (EQ < GE).
    Conflict between rule 17 and token GE resolved as reduce (%left GE).
    Conflict between rule 17 and token GT resolved as reduce (%left GT).
    Conflict between rule 17 and token LE resolved as reduce (%left LE).
    Conflict between rule 17 and token LT resolved as reduce (%left LT).
    Conflict between rule 17 and token MINUS resolved as shift (GE < MINUS).
    Conflict between rule 17 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 17 and token NE resolved as reduce (NE < GE).
    Conflict between rule 17 and token OR resolved as reduce (OR < GE).
    Conflict between rule 17 and token PLUS resolved as shift (GE < PLUS).
    Conflict between rule 17 and token COMMA resolved as reduce (COMMA < GE).


State 47

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr
   19     | Expr GT Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, NE, OR, RPAR, COMMA]

    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    MINUS  shift, and go to state 29
    MOD    shift, and go to state 30
    PLUS   shift, and go to state 33

    $default  reduce using rule 19 (Expr)

    Conflict between rule 19 and token BITWISEAND resolved as reduce (BITWISEAND < GT).
    Conflict between rule 19 and token BITWISEOR resolved as reduce (BITWISEOR < GT).
    Conflict between rule 19 and token BITWISEXOR resolved as reduce (BITWISEXOR < GT).
    Conflict between rule 19 and token AND resolved as reduce (AND < GT).
    Conflict between rule 19 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 19 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 19 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 19 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 19 and token GE resolved as reduce (%left GE).
    Conflict between rule 19 and token GT resolved as reduce (%left GT).
    Conflict between rule 19 and token LE resolved as reduce (%left LE).
    Conflict between rule 19 and token LT resolved as reduce (%left LT).
    Conflict between rule 19 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 19 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 19 and token NE resolved as reduce (NE < GT).
    Conflict between rule 19 and token OR resolved as reduce (OR < GT).
    Conflict between rule 19 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 19 and token COMMA resolved as reduce (COMMA < GT).


State 48

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   16     | Expr LE Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, NE, OR, RPAR, COMMA]
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    MINUS  shift, and go to state 29
    MOD    shift, and go to state 30
    PLUS   shift, and go to state 33

    $default  reduce using rule 16 (Expr)

    Conflict between rule 16 and token BITWISEAND resolved as reduce (BITWISEAND < LE).
    Conflict between rule 16 and token BITWISEOR resolved as reduce (BITWISEOR < LE).
    Conflict between rule 16 and token BITWISEXOR resolved as reduce (BITWISEXOR < LE).
    Conflict between rule 16 and token AND resolved as reduce (AND < LE).
    Conflict between rule 16 and token ASSIGN resolved as reduce (ASSIGN < LE).
    Conflict between rule 16 and token MUL resolved as shift (LE < MUL).
    Conflict between rule 16 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 16 and token EQ resolved as reduce (EQ < LE).
    Conflict between rule 16 and token GE resolved as reduce (%left GE).
    Conflict between rule 16 and token GT resolved as reduce (%left GT).
    Conflict between rule 16 and token LE resolved as reduce (%left LE).
    Conflict between rule 16 and token LT resolved as reduce (%left LT).
    Conflict between rule 16 and token MINUS resolved as shift (LE < MINUS).
    Conflict between rule 16 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 16 and token NE resolved as reduce (NE < LE).
    Conflict between rule 16 and token OR resolved as reduce (OR < LE).
    Conflict between rule 16 and token PLUS resolved as shift (LE < PLUS).
    Conflict between rule 16 and token COMMA resolved as reduce (COMMA < LE).


State 49

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   18     | Expr LT Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, NE, OR, RPAR, COMMA]
   19     | Expr • GT Expr

    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    MINUS  shift, and go to state 29
    MOD    shift, and go to state 30
    PLUS   shift, and go to state 33

    $default  reduce using rule 18 (Expr)

    Conflict between rule 18 and token BITWISEAND resolved as reduce (BITWISEAND < LT).
    Conflict between rule 18 and token BITWISEOR resolved as reduce (BITWISEOR < LT).
    Conflict between rule 18 and token BITWISEXOR resolved as reduce (BITWISEXOR < LT).
    Conflict between rule 18 and token AND resolved as reduce (AND < LT).
    Conflict between rule 18 and token ASSIGN resolved as reduce (ASSIGN < LT).
    Conflict between rule 18 and token MUL resolved as shift (LT < MUL).
    Conflict between rule 18 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 18 and token EQ resolved as reduce (EQ < LT).
    Conflict between rule 18 and token GE resolved as reduce (%left GE).
    Conflict between rule 18 and token GT resolved as reduce (%left GT).
    Conflict between rule 18 and token LE resolved as reduce (%left LE).
    Conflict between rule 18 and token LT resolved as reduce (%left LT).
    Conflict between rule 18 and token MINUS resolved as shift (LT < MINUS).
    Conflict between rule 18 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 18 and token NE resolved as reduce (NE < LT).
    Conflict between rule 18 and token OR resolved as reduce (OR < LT).
    Conflict between rule 18 and token PLUS resolved as shift (LT < PLUS).
    Conflict between rule 18 and token COMMA resolved as reduce (COMMA < LT).


State 50

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    5     | Expr MINUS Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, COMMA]
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    MUL  shift, and go to state 22
    DIV  shift, and go to state 23
    MOD  shift, and go to state 30

    $default  reduce using rule 5 (Expr)

    Conflict between rule 5 and token BITWISEAND resolved as reduce (BITWISEAND < MINUS).
    Conflict between rule 5 and token BITWISEOR resolved as reduce (BITWISEOR < MINUS).
    Conflict between rule 5 and token BITWISEXOR resolved as reduce (BITWISEXOR < MINUS).
    Conflict between rule 5 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 5 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 5 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 5 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 5 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 5 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 5 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 5 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 5 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 5 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 5 and token MOD resolved as shift (MINUS < MOD).
    Conflict between rule 5 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 5 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 5 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 5 and token COMMA resolved as reduce (COMMA < MINUS).


State 51

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    8     | Expr MOD Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, COMMA]
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    $default  reduce using rule 8 (Expr)

    Conflict between rule 8 and token BITWISEAND resolved as reduce (BITWISEAND < MOD).
    Conflict between rule 8 and token BITWISEOR resolved as reduce (BITWISEOR < MOD).
    Conflict between rule 8 and token BITWISEXOR resolved as reduce (BITWISEXOR < MOD).
    Conflict between rule 8 and token AND resolved as reduce (AND < MOD).
    Conflict between rule 8 and token ASSIGN resolved as reduce (ASSIGN < MOD).
    Conflict between rule 8 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 8 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 8 and token EQ resolved as reduce (EQ < MOD).
    Conflict between rule 8 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 8 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 8 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 8 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 8 and token MINUS resolved as reduce (MINUS < MOD).
    Conflict between rule 8 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 8 and token NE resolved as reduce (NE < MOD).
    Conflict between rule 8 and token OR resolved as reduce (OR < MOD).
    Conflict between rule 8 and token PLUS resolved as reduce (PLUS < MOD).
    Conflict between rule 8 and token COMMA resolved as reduce (COMMA < MOD).


State 52

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   15     | Expr NE Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, NE, OR, RPAR, COMMA]
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    GE     shift, and go to state 25
    GT     shift, and go to state 26
    LE     shift, and go to state 27
    LT     shift, and go to state 28
    MINUS  shift, and go to state 29
    MOD    shift, and go to state 30
    PLUS   shift, and go to state 33

    $default  reduce using rule 15 (Expr)

    Conflict between rule 15 and token BITWISEAND resolved as reduce (BITWISEAND < NE).
    Conflict between rule 15 and token BITWISEOR resolved as reduce (BITWISEOR < NE).
    Conflict between rule 15 and token BITWISEXOR resolved as reduce (BITWISEXOR < NE).
    Conflict between rule 15 and token AND resolved as reduce (AND < NE).
    Conflict between rule 15 and token ASSIGN resolved as reduce (ASSIGN < NE).
    Conflict between rule 15 and token MUL resolved as shift (NE < MUL).
    Conflict between rule 15 and token DIV resolved as shift (NE < DIV).
    Conflict between rule 15 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 15 and token GE resolved as shift (NE < GE).
    Conflict between rule 15 and token GT resolved as shift (NE < GT).
    Conflict between rule 15 and token LE resolved as shift (NE < LE).
    Conflict between rule 15 and token LT resolved as shift (NE < LT).
    Conflict between rule 15 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 15 and token MOD resolved as shift (NE < MOD).
    Conflict between rule 15 and token NE resolved as reduce (%left NE).
    Conflict between rule 15 and token OR resolved as reduce (OR < NE).
    Conflict between rule 15 and token PLUS resolved as shift (NE < PLUS).
    Conflict between rule 15 and token COMMA resolved as reduce (COMMA < NE).


State 53

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
    9     | Expr OR Expr •  [$end, ASSIGN, OR, RPAR, COMMA]
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    BITWISEAND  shift, and go to state 17
    BITWISEOR   shift, and go to state 18
    BITWISEXOR  shift, and go to state 19
    AND         shift, and go to state 20
    MUL         shift, and go to state 22
    DIV         shift, and go to state 23
    EQ          shift, and go to state 24
    GE          shift, and go to state 25
    GT          shift, and go to state 26
    LE          shift, and go to state 27
    LT          shift, and go to state 28
    MINUS       shift, and go to state 29
    MOD         shift, and go to state 30
    NE          shift, and go to state 31
    PLUS        shift, and go to state 33

    $default  reduce using rule 9 (Expr)

    Conflict between rule 9 and token BITWISEAND resolved as shift (OR < BITWISEAND).
    Conflict between rule 9 and token BITWISEOR resolved as shift (OR < BITWISEOR).
    Conflict between rule 9 and token BITWISEXOR resolved as shift (OR < BITWISEXOR).
    Conflict between rule 9 and token AND resolved as shift (OR < AND).
    Conflict between rule 9 and token ASSIGN resolved as reduce (ASSIGN < OR).
    Conflict between rule 9 and token MUL resolved as shift (OR < MUL).
    Conflict between rule 9 and token DIV resolved as shift (OR < DIV).
    Conflict between rule 9 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 9 and token GE resolved as shift (OR < GE).
    Conflict between rule 9 and token GT resolved as shift (OR < GT).
    Conflict between rule 9 and token LE resolved as shift (OR < LE).
    Conflict between rule 9 and token LT resolved as shift (OR < LT).
    Conflict between rule 9 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 9 and token MOD resolved as shift (OR < MOD).
    Conflict between rule 9 and token NE resolved as shift (OR < NE).
    Conflict between rule 9 and token OR resolved as reduce (%left OR).
    Conflict between rule 9 and token PLUS resolved as shift (OR < PLUS).
    Conflict between rule 9 and token COMMA resolved as reduce (COMMA < OR).


State 54

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    4     | Expr • PLUS Expr
    4     | Expr PLUS Expr •  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, COMMA]
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    MUL  shift, and go to state 22
    DIV  shift, and go to state 23
    MOD  shift, and go to state 30

    $default  reduce using rule 4 (Expr)

    Conflict between rule 4 and token BITWISEAND resolved as reduce (BITWISEAND < PLUS).
    Conflict between rule 4 and token BITWISEOR resolved as reduce (BITWISEOR < PLUS).
    Conflict between rule 4 and token BITWISEXOR resolved as reduce (BITWISEXOR < PLUS).
    Conflict between rule 4 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 4 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 4 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 4 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 4 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 4 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 4 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 4 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 4 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 4 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 4 and token MOD resolved as shift (PLUS < MOD).
    Conflict between rule 4 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 4 and token OR resolved as reduce (OR < PLUS).
    Conflict between rule 4 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 4 and token COMMA resolved as reduce (COMMA < PLUS).


State 55

    2 Expr: Expr • ASSIGN Expr
    3     | Expr • COMMA Expr
    3     | Expr COMMA Expr •  [$end, RPAR, COMMA]
    4     | Expr • PLUS Expr
    5     | Expr • MINUS Expr
    6     | Expr • MUL Expr
    7     | Expr • DIV Expr
    8     | Expr • MOD Expr
    9     | Expr • OR Expr
   10     | Expr • AND Expr
   11     | Expr • BITWISEAND Expr
   12     | Expr • BITWISEOR Expr
   13     | Expr • BITWISEXOR Expr
   14     | Expr • EQ Expr
   15     | Expr • NE Expr
   16     | Expr • LE Expr
   17     | Expr • GE Expr
   18     | Expr • LT Expr
   19     | Expr • GT Expr

    BITWISEAND  shift, and go to state 17
    BITWISEOR   shift, and go to state 18
    BITWISEXOR  shift, and go to state 19
    AND         shift, and go to state 20
    ASSIGN      shift, and go to state 21
    MUL         shift, and go to state 22
    DIV         shift, and go to state 23
    EQ          shift, and go to state 24
    GE          shift, and go to state 25
    GT          shift, and go to state 26
    LE          shift, and go to state 27
    LT          shift, and go to state 28
    MINUS       shift, and go to state 29
    MOD         shift, and go to state 30
    NE          shift, and go to state 31
    OR          shift, and go to state 32
    PLUS        shift, and go to state 33

    $default  reduce using rule 3 (Expr)

    Conflict between rule 3 and token BITWISEAND resolved as shift (COMMA < BITWISEAND).
    Conflict between rule 3 and token BITWISEOR resolved as shift (COMMA < BITWISEOR).
    Conflict between rule 3 and token BITWISEXOR resolved as shift (COMMA < BITWISEXOR).
    Conflict between rule 3 and token AND resolved as shift (COMMA < AND).
    Conflict between rule 3 and token ASSIGN resolved as shift (COMMA < ASSIGN).
    Conflict between rule 3 and token MUL resolved as shift (COMMA < MUL).
    Conflict between rule 3 and token DIV resolved as shift (COMMA < DIV).
    Conflict between rule 3 and token EQ resolved as shift (COMMA < EQ).
    Conflict between rule 3 and token GE resolved as shift (COMMA < GE).
    Conflict between rule 3 and token GT resolved as shift (COMMA < GT).
    Conflict between rule 3 and token LE resolved as shift (COMMA < LE).
    Conflict between rule 3 and token LT resolved as shift (COMMA < LT).
    Conflict between rule 3 and token MINUS resolved as shift (COMMA < MINUS).
    Conflict between rule 3 and token MOD resolved as shift (COMMA < MOD).
    Conflict between rule 3 and token NE resolved as shift (COMMA < NE).
    Conflict between rule 3 and token OR resolved as shift (COMMA < OR).
    Conflict between rule 3 and token PLUS resolved as shift (COMMA < PLUS).
    Conflict between rule 3 and token COMMA resolved as reduce (%left COMMA).


State 56

   24 Expr: IDENTIFIER LPAR Expr RPAR •

    $default  reduce using rule 24 (Expr)
